stage('NIGHTLY Build') {
    final REPOSITORY_LIST_FILE = "./script/repository-list.txt"
    final SETTINGS_XML_ID = "bad24dd8-1f65-400c-ac8a-2e1aaf1b2ca9"
    final PRODUCTION_PROJECT_LIST_ID = "49737697-ebd6-4396-9c22-11f7714808eb"
    final GIT_CERT_FILE_ID = "61402e54-2b69-4813-be46-8a8a6e0152d3"

    configFileProvider([configFile(fileId: GIT_CERT_FILE_ID, variable: 'GIT_CERT_FILE_ID')]) {
        def cert = "${env.GIT_CERT_FILE_ID}"
        println "cert ${cert}"
        sh "whoami"
        sh "sudo cp ${cert} $JAVA_HOME/jre/lib/security"
        sh "ls $JAVA_HOME/jre/lib/security"
    }


    configFileProvider([configFile(fileId: PRODUCTION_PROJECT_LIST_ID, variable: 'PRODUCTION_PROJECT_LIST')]) {
        println "Reading file ${REPOSITORY_LIST_FILE} and merging it with ${PRODUCTION_PROJECT_LIST} jenkins file"

        def communityProjectListFile = readFile REPOSITORY_LIST_FILE
        def projectCollection = communityProjectListFile.readLines()
        def productionProjectListFile = readFile "${env.PRODUCTION_PROJECT_LIST}"
        projectCollection.addAll(productionProjectListFile.readLines())
        println "File ${REPOSITORY_LIST_FILE} and ${PRODUCTION_PROJECT_LIST} jenkins file merged in ${projectCollection}"

        println "Checking out ${env.BUILD_CONFIGURATION_REPO_URL} into build_config folder"
        sh "git clone ${env.BUILD_CONFIGURATION_REPO_URL} build_config"

        pmebuild.buildProjects(projectCollection, "${SETTINGS_XML_ID}", "$WORKSPACE/build_config/rhba/nightly/build-config.yaml", "${env.PME_CLI_PATH}", "${env.KIE_GROUP_DEPLOYMENT_REPO_URL}")
    }
}
